{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAbM,kBAeXA,GAfW,4CAAH,sDCENS,EAAc,SAAC,GAAsB,EAArBN,GAAsB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIrC,OACI,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAOR,IACtB,4BAAIA,QCLHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAU,WAEN1B,EAAOC,GACF0B,MAAK,SAAAC,GAGEZ,QAAQC,IAAIW,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAI1B,CAACtB,IAEGuB,EDnByBK,CAAa5B,GAAjCa,EAHyB,EAG9BN,KAAce,EAHgB,EAGhBA,QAGrB,OAEI,qCACI,6BAAKtB,IAEJsB,GAAW,4CACZ,qBAAKJ,UAAU,kDAAf,SAEKL,EAAOJ,KAAI,SAACoB,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIlB,aEf7BmB,EAAe,WAAO,IAAD,EAGM5C,mBAAS,CAAC,iBAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAU9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OAAK,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjB9D+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae1aa411.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('enviado')\r\n        if(inputValue.trim().length >2){\r\n            setCategories(categories=> [ inputValue,...categories,])\r\n            setInputValue('')\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n\r\n}\r\n","export const getGif = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=KX8oTfzuR8kTqVhHh3yFSmnPi4YbiBDW`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id , title, url}) => {\r\n\r\n    // console.log(img);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images , loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Cargando...</p>}\r\n            <div className=\"card-grid animate__animated animate__fadeInDown\">\r\n\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                    \r\n                    ))}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGif(category)\r\n            .then(imgs =>{\r\n             \r\n                    \r\n                    console.log(imgs)\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Black Clover'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'HunterxHunter'])\r\n\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (<GifGrid key={category} category={category}/>))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}